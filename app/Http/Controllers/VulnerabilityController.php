<?php

namespace App\Http\Controllers;

use App\Models\Vulnerability;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\Routing\ResponseFactory;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;

class VulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        return Inertia::render('Dashboard', [
            'vulnerabilities' => Vulnerability::all()
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create(Request $request)
    {
        return Inertia::render('Create');
    }

    /**
     * Store the new entry
     *
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $validated_data = $request->validate([
            'title' => 'required|string|max:64',
            'description' => 'required|string',
            'url' => 'nullable|string|max:128'
        ]);

        return Vulnerability::create($validated_data);
    }

    /**
     * Display the specified resource.
     *
     * @param int $id
     * @return Response
     */
    public function show(Vulnerability $vulnerability)
    {
        return Inertia::render('Show', [
            'vulnerability' => $vulnerability
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param int $id
     * @return Response
     */
    public function edit(Request $request, Vulnerability $vulnerability)
    {
        return Inertia::render('Edit', [
            'vulnerability' => $vulnerability
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     * @param int $id
     * @return Vulnerability
     */
    public function update(Request $request, Vulnerability $vulnerability)
    {
        $validated_data = $request->validate([
            'title' => 'nullable|string|max:64',
            'description' => 'nullable|string',
            'url' => 'nullable|string|max:128'
        ]);

        $vulnerability->update($validated_data);

        return $vulnerability;
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param int $id
     * @return Application|ResponseFactory|\Illuminate\Http\Response
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();

        return response('Entry deleted', 204);
    }
}
